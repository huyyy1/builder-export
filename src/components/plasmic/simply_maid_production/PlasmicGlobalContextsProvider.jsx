// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: dCBp3p2g2cgYAgGFEQRPSF
import * as React from "react";
import { EmbedCss } from "@plasmicpkgs/plasmic-embed-css";
import { AntdConfigProvider } from "@plasmicpkgs/antd5/skinny/registerConfigProvider";
import { CmsCredentialsProvider } from "@plasmicpkgs/plasmic-cms";

export default function GlobalContextsProvider(props) {
  const {
    children,
    embedCssProps,
    antdConfigProviderProps,
    cmsCredentialsProviderProps
  } = props;
  return (
    <EmbedCss
      {...embedCssProps}
      css={
        embedCssProps && "css" in embedCssProps
          ? embedCssProps.css
          : "/* CSS snippet */\r\n\r\n.grid-container--fit {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n}\r\n\r\n.transition-opacity {\r\n  opacity: 1;\r\n  transition: opacity 1s ease-in-out;\r\n}\r\n\r\n.hidden {\r\n  opacity: 0;\r\n  pointer-events: none;\r\n}\r\n"
      }
    >
      <AntdConfigProvider
        {...antdConfigProviderProps}
        borderRadius={
          antdConfigProviderProps && "borderRadius" in antdConfigProviderProps
            ? antdConfigProviderProps.borderRadius
            : 6
        }
        colorBgBase={
          antdConfigProviderProps && "colorBgBase" in antdConfigProviderProps
            ? antdConfigProviderProps.colorBgBase
            : "#ffffff"
        }
        colorError={
          antdConfigProviderProps && "colorError" in antdConfigProviderProps
            ? antdConfigProviderProps.colorError
            : "#ff4d4f"
        }
        colorInfo={
          antdConfigProviderProps && "colorInfo" in antdConfigProviderProps
            ? antdConfigProviderProps.colorInfo
            : "#1677ff"
        }
        colorPrimary={
          antdConfigProviderProps && "colorPrimary" in antdConfigProviderProps
            ? antdConfigProviderProps.colorPrimary
            : "#1677ff"
        }
        colorSuccess={
          antdConfigProviderProps && "colorSuccess" in antdConfigProviderProps
            ? antdConfigProviderProps.colorSuccess
            : "#52c41a"
        }
        colorWarning={
          antdConfigProviderProps && "colorWarning" in antdConfigProviderProps
            ? antdConfigProviderProps.colorWarning
            : "#faad14"
        }
        controlHeight={
          antdConfigProviderProps && "controlHeight" in antdConfigProviderProps
            ? antdConfigProviderProps.controlHeight
            : 32
        }
        defaultDark={
          antdConfigProviderProps && "defaultDark" in antdConfigProviderProps
            ? antdConfigProviderProps.defaultDark
            : false
        }
        lineWidth={
          antdConfigProviderProps && "lineWidth" in antdConfigProviderProps
            ? antdConfigProviderProps.lineWidth
            : 1
        }
        loadingText={
          antdConfigProviderProps && "loadingText" in antdConfigProviderProps
            ? antdConfigProviderProps.loadingText
            : undefined
        }
        removeLoading={
          antdConfigProviderProps && "removeLoading" in antdConfigProviderProps
            ? antdConfigProviderProps.removeLoading
            : undefined
        }
        sizeStep={
          antdConfigProviderProps && "sizeStep" in antdConfigProviderProps
            ? antdConfigProviderProps.sizeStep
            : 4
        }
        sizeUnit={
          antdConfigProviderProps && "sizeUnit" in antdConfigProviderProps
            ? antdConfigProviderProps.sizeUnit
            : 4
        }
        themeStyles={
          antdConfigProviderProps && "themeStyles" in antdConfigProviderProps
            ? antdConfigProviderProps.themeStyles
            : true
            ? {
                fontFamily: "Poppins",
                fontSize: "18px",
                fontWeight: "500",
                lineHeight: "1",
                color: "#535353",
                letterSpacing: "normal"
              }
            : undefined
        }
        wireframe={
          antdConfigProviderProps && "wireframe" in antdConfigProviderProps
            ? antdConfigProviderProps.wireframe
            : false
        }
      >
        <CmsCredentialsProvider
          {...cmsCredentialsProviderProps}
          databaseId={
            cmsCredentialsProviderProps &&
            "databaseId" in cmsCredentialsProviderProps
              ? cmsCredentialsProviderProps.databaseId
              : undefined
          }
          databaseToken={
            cmsCredentialsProviderProps &&
            "databaseToken" in cmsCredentialsProviderProps
              ? cmsCredentialsProviderProps.databaseToken
              : undefined
          }
          host={
            cmsCredentialsProviderProps && "host" in cmsCredentialsProviderProps
              ? cmsCredentialsProviderProps.host
              : "https://data.plasmic.app"
          }
          locale={
            cmsCredentialsProviderProps &&
            "locale" in cmsCredentialsProviderProps
              ? cmsCredentialsProviderProps.locale
              : undefined
          }
        >
          {children}
        </CmsCredentialsProvider>
      </AntdConfigProvider>
    </EmbedCss>
  );
}
