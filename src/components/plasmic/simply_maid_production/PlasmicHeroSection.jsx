// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: dCBp3p2g2cgYAgGFEQRPSF
// Component: dDilK_Rq-wZp
import * as React from "react";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import { AntdAvatar } from "@plasmicpkgs/antd5/skinny/registerAvatar";
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: dCBp3p2g2cgYAgGFEQRPSF/projectcss
import sty from "./PlasmicHeroSection.module.css"; // plasmic-import: dDilK_Rq-wZp/css
import Vector21Icon from "./icons/PlasmicIcon__Vector21"; // plasmic-import: oR8DoZituqiJ/icon
import ArrowDropDown2Icon from "./icons/PlasmicIcon__ArrowDropDown2"; // plasmic-import: StbHtEXwglNv/icon
import MenuIcon from "./icons/PlasmicIcon__Menu"; // plasmic-import: R_S_J4x-12hl/icon
import Line9Icon from "./icons/PlasmicIcon__Line9"; // plasmic-import: gxWCSXSrh1CZ/icon
import CallIcon from "./icons/PlasmicIcon__Call"; // plasmic-import: aapSUZib0rR9/icon
import Plus2Icon from "./icons/PlasmicIcon__Plus2"; // plasmic-import: akAEDDX99fb-/icon
import StarBackground2Icon from "./icons/PlasmicIcon__StarBackground2"; // plasmic-import: LqAqEQpCdorG/icon
import Vector8Icon from "./icons/PlasmicIcon__Vector8"; // plasmic-import: 1-Wa_GUkox58/icon
import EnvelopeIcon from "./icons/PlasmicIcon__Envelope"; // plasmic-import: rKnsoeTJhuf8/icon
import VectorIcon from "./icons/PlasmicIcon__Vector"; // plasmic-import: ZhqqHfrRXM4u/icon
import Vector2Icon from "./icons/PlasmicIcon__Vector2"; // plasmic-import: ifByoM-utKGv/icon
import ChevronDownIcon from "./icons/PlasmicIcon__ChevronDown"; // plasmic-import: jDyuRdNVpMtD/icon
import BedIcon from "./icons/PlasmicIcon__Bed"; // plasmic-import: v78z9tLZLIQ2/icon
import Line1Icon from "./icons/PlasmicIcon__Line1"; // plasmic-import: W4rqzLBY1Xao/icon
import ExpandMoreIcon from "./icons/PlasmicIcon__ExpandMore"; // plasmic-import: QUdONjXNIt8s/icon
import Vector3Icon from "./icons/PlasmicIcon__Vector3"; // plasmic-import: IaeBCIrQODUp/icon
import ShowerIcon from "./icons/PlasmicIcon__Shower"; // plasmic-import: 1XXc3MKxQaKj/icon
import CleaningServicesIcon from "./icons/PlasmicIcon__CleaningServices"; // plasmic-import: Z167AYrVjIQL/icon
import ArrowForwardIcon from "./icons/PlasmicIcon__ArrowForward"; // plasmic-import: 2_xkCXa_kFGb/icon
import crossedFingersSvgrepoCom8C5Y5Ld83TmLe from "./images/crossedFingersSvgrepoCom8.svg"; // plasmic-import: c5y5LD83tmLE/picture
import crossedFingersSvgrepoCom9UsB084EaWa1 from "./images/crossedFingersSvgrepoCom9.svg"; // plasmic-import: us_b084eaWa1/picture
import simplyMaid23NpO9Tyl7Bf from "./images/simplyMaid2.svg"; // plasmic-import: 3NpO9_tyl7bf/picture
import star16GwRKhOaLt0Jz from "./images/star16.svg"; // plasmic-import: GwRKhOALt0jz/picture
import star17K7R5Klj8Dgrx from "./images/star17.svg"; // plasmic-import: K7R5Klj8dgrx/picture
import star18DIxg5GmMeAf from "./images/star18.svg"; // plasmic-import: DIxg-5GmMeAF/picture
import star19LnfQ7DdRIkT from "./images/star19.svg"; // plasmic-import: lnf-q7DdRIkT/picture
import star20P0LQIs1DIc from "./images/star20.svg"; // plasmic-import: p0_L-qIS1DIc/picture
import group3X83XUiYwVIlN from "./images/group3.svg"; // plasmic-import: x83XUiYwVIlN/picture
import questionCircle13IIf7Rc8LlGm from "./images/questionCircle13.svg"; // plasmic-import: iIf7rc8llGm_/picture
import questionCircle14VvnoJjxrd3VS from "./images/questionCircle14.svg"; // plasmic-import: VVNOJjxrd3vS/picture
import questionCircle15P782UT7XehJj from "./images/questionCircle15.svg"; // plasmic-import: P782uT7XEHJj/picture

createPlasmicElementProxy;

export const PlasmicHeroSection__VariantProps = new Array();

export const PlasmicHeroSection__ArgProps = new Array();

const $$ = {};

function PlasmicHeroSection__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <Stack__
            as={"div"}
            data-plasmic-name={"step21"}
            data-plasmic-override={overrides.step21}
            hasGap={true}
            className={classNames(projectcss.all, sty.step21)}
          >
            <div
              data-plasmic-name={"heroSection"}
              data-plasmic-override={overrides.heroSection}
              className={classNames(projectcss.all, sty.heroSection)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"trending"}
                data-plasmic-override={overrides.trending}
                hasGap={true}
                className={classNames(projectcss.all, sty.trending)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__pC2ZT
                  )}
                >
                  {"It\u2019ll be the best decision ever!"}
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__pmsPl)}
                  displayHeight={"24px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"24px"}
                  loading={"lazy"}
                  src={{
                    src: crossedFingersSvgrepoCom8C5Y5Ld83TmLe,
                    fullWidth: 24,
                    fullHeight: 24,
                    aspectRatio: 1
                  }}
                />
              </Stack__>
              <Vector21Icon
                className={classNames(projectcss.all, sty.svg___4KtX0)}
                role={"img"}
              />

              <Stack__
                as={"div"}
                data-plasmic-name={"trending2"}
                data-plasmic-override={overrides.trending2}
                hasGap={true}
                className={classNames(projectcss.all, sty.trending2)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__u36TT
                  )}
                >
                  {"It\u2019ll be the best decision ever!"}
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__mn5X7)}
                  displayHeight={"24px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"24px"}
                  loading={"lazy"}
                  src={{
                    src: crossedFingersSvgrepoCom9UsB084EaWa1,
                    fullWidth: 24,
                    fullHeight: 24,
                    aspectRatio: 1
                  }}
                />
              </Stack__>
            </div>
            <div
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              className={classNames(projectcss.all, sty.navbar)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"frame5995"}
                data-plasmic-override={overrides.frame5995}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame5995)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"logo"}
                  data-plasmic-override={overrides.logo}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.logo)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___4FQq3)}
                    displayHeight={"29px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"177px"}
                    loading={"lazy"}
                    src={{
                      src: simplyMaid23NpO9Tyl7Bf,
                      fullWidth: 177,
                      fullHeight: 29,
                      aspectRatio: 6.103448
                    }}
                  />

                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427322500"}
                    data-plasmic-override={overrides.frame427322500}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427322500)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uTYc8
                      )}
                    >
                      {"Melbourne"}
                    </div>
                    <div
                      data-plasmic-name={"arrowDropDown"}
                      data-plasmic-override={overrides.arrowDropDown}
                      className={classNames(projectcss.all, sty.arrowDropDown)}
                    >
                      <ArrowDropDown2Icon
                        className={classNames(projectcss.all, sty.svg___9KtAv)}
                        role={"img"}
                      />
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"navMenu"}
                  data-plasmic-override={overrides.navMenu}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.navMenu)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000005439"}
                    data-plasmic-override={overrides.frame1000005439}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000005439)}
                  >
                    <div
                      data-plasmic-name={"menu"}
                      data-plasmic-override={overrides.menu}
                      className={classNames(projectcss.all, sty.menu)}
                    >
                      <MenuIcon
                        className={classNames(projectcss.all, sty.svg___18MP)}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__z4X4H
                      )}
                    >
                      {"Menu"}
                    </div>
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___7Da9)}
                  >
                    <Line9Icon
                      className={classNames(projectcss.all, sty.svg__td3Lr)}
                      role={"img"}
                    />
                  </div>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000005438"}
                    data-plasmic-override={overrides.frame1000005438}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000005438)}
                  >
                    <div
                      data-plasmic-name={"call"}
                      data-plasmic-override={overrides.call}
                      className={classNames(projectcss.all, sty.call)}
                    >
                      <CallIcon
                        className={classNames(projectcss.all, sty.svg__actVb)}
                        role={"img"}
                      />
                    </div>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"actionBtns"}
                      data-plasmic-override={overrides.actionBtns}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.actionBtns)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bgSn
                        )}
                      >
                        {"1300 009 363"}
                      </div>
                    </Stack__>
                  </Stack__>
                </Stack__>
              </Stack__>
            </div>
            <div
              data-plasmic-name={"frame427322524"}
              data-plasmic-override={overrides.frame427322524}
              className={classNames(projectcss.all, sty.frame427322524)}
            >
              <div
                data-plasmic-name={"deliverAnEnterpriseQuality"}
                data-plasmic-override={overrides.deliverAnEnterpriseQuality}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.deliverAnEnterpriseQuality
                )}
              >
                {"HATE CLEANING?\nWE LOVE IT"}
              </div>
              <div
                data-plasmic-name={"frame427322523"}
                data-plasmic-override={overrides.frame427322523}
                className={classNames(projectcss.all, sty.frame427322523)}
              >
                <div
                  data-plasmic-name={"headerDetail"}
                  data-plasmic-override={overrides.headerDetail}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.headerDetail
                  )}
                >
                  {"It\u2019s shockingly fast. (Oh, and we\u2019re good too.)"}
                </div>
                <div
                  data-plasmic-name={"frame427322522"}
                  data-plasmic-override={overrides.frame427322522}
                  className={classNames(projectcss.all, sty.frame427322522)}
                >
                  <div
                    data-plasmic-name={"headerDetail2"}
                    data-plasmic-override={overrides.headerDetail2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.headerDetail2
                    )}
                  >
                    {"Book Sydney most loved cleaning in"}
                  </div>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427322521"}
                    data-plasmic-override={overrides.frame427322521}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427322521)}
                  >
                    <div
                      data-plasmic-name={"headerDetail3"}
                      data-plasmic-override={overrides.headerDetail3}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.headerDetail3
                      )}
                    >
                      {"60 seconds"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"userReviews"}
                  data-plasmic-override={overrides.userReviews}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.userReviews)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"avatarGroup"}
                    data-plasmic-override={overrides.avatarGroup}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.avatarGroup)}
                  >
                    <div
                      data-plasmic-name={"avatars"}
                      data-plasmic-override={overrides.avatars}
                      className={classNames(projectcss.all, sty.avatars)}
                    >
                      <div
                        data-plasmic-name={"avatar"}
                        data-plasmic-override={overrides.avatar}
                        className={classNames(projectcss.all, sty.avatar)}
                      >
                        <div
                          data-plasmic-name={"contrastBorder"}
                          data-plasmic-override={overrides.contrastBorder}
                          className={classNames(
                            projectcss.all,
                            sty.contrastBorder
                          )}
                        />
                      </div>
                      <div
                        data-plasmic-name={"avatar2"}
                        data-plasmic-override={overrides.avatar2}
                        className={classNames(projectcss.all, sty.avatar2)}
                      >
                        <div
                          data-plasmic-name={"contrastBorder2"}
                          data-plasmic-override={overrides.contrastBorder2}
                          className={classNames(
                            projectcss.all,
                            sty.contrastBorder2
                          )}
                        />
                      </div>
                      <div
                        data-plasmic-name={"avatar3"}
                        data-plasmic-override={overrides.avatar3}
                        className={classNames(projectcss.all, sty.avatar3)}
                      >
                        <div
                          data-plasmic-name={"contrastBorder3"}
                          data-plasmic-override={overrides.contrastBorder3}
                          className={classNames(
                            projectcss.all,
                            sty.contrastBorder3
                          )}
                        />
                      </div>
                      <div
                        data-plasmic-name={"avatar4"}
                        data-plasmic-override={overrides.avatar4}
                        className={classNames(projectcss.all, sty.avatar4)}
                      >
                        <div
                          data-plasmic-name={"contrastBorder4"}
                          data-plasmic-override={overrides.contrastBorder4}
                          className={classNames(
                            projectcss.all,
                            sty.contrastBorder4
                          )}
                        />
                      </div>
                      {false ? (
                        <AntdAvatar
                          data-plasmic-name={"avatar5"}
                          data-plasmic-override={overrides.avatar5}
                          className={classNames("__wab_instance", sty.avatar5)}
                          letters={"AB"}
                          size={"md"}
                        />
                      ) : null}
                      {false ? (
                        <AntdAvatar
                          data-plasmic-name={"avatar6"}
                          data-plasmic-override={overrides.avatar6}
                          className={classNames("__wab_instance", sty.avatar6)}
                          letters={"AB"}
                          size={"md"}
                        />
                      ) : null}
                      {false ? (
                        <AntdAvatar
                          data-plasmic-name={"avatar7"}
                          data-plasmic-override={overrides.avatar7}
                          className={classNames("__wab_instance", sty.avatar7)}
                          letters={"AB"}
                          size={"md"}
                        />
                      ) : null}
                      {false ? (
                        <AntdAvatar
                          data-plasmic-name={"avatar8"}
                          data-plasmic-override={overrides.avatar8}
                          className={classNames("__wab_instance", sty.avatar8)}
                          letters={"AB"}
                          size={"md"}
                        />
                      ) : null}
                      {false ? (
                        <AntdAvatar
                          data-plasmic-name={"avatar9"}
                          data-plasmic-override={overrides.avatar9}
                          className={classNames("__wab_instance", sty.avatar9)}
                          letters={"AB"}
                          size={"md"}
                        />
                      ) : null}
                      {false ? (
                        <AntdAvatar
                          data-plasmic-name={"avatar10"}
                          data-plasmic-override={overrides.avatar10}
                          className={classNames("__wab_instance", sty.avatar10)}
                          letters={"AB"}
                          size={"md"}
                        />
                      ) : null}
                      {false ? (
                        <AntdAvatar
                          data-plasmic-name={"avatar11"}
                          data-plasmic-override={overrides.avatar11}
                          className={classNames("__wab_instance", sty.avatar11)}
                          letters={"AB"}
                          size={"md"}
                        />
                      ) : null}
                    </div>
                    {false ? (
                      <div
                        data-plasmic-name={"avatarAddButton"}
                        data-plasmic-override={overrides.avatarAddButton}
                        className={classNames(
                          projectcss.all,
                          sty.avatarAddButton
                        )}
                      >
                        <div
                          data-plasmic-name={"content"}
                          data-plasmic-override={overrides.content}
                          className={classNames(projectcss.all, sty.content)}
                        >
                          <Plus2Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__g1C7U
                            )}
                            role={"img"}
                          />
                        </div>
                      </div>
                    ) : null}
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"reviews"}
                    data-plasmic-override={overrides.reviews}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.reviews)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"row"}
                      data-plasmic-override={overrides.row}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.row)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"stars"}
                        data-plasmic-override={overrides.stars}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.stars)}
                      >
                        <div
                          data-plasmic-name={"starIcon"}
                          data-plasmic-override={overrides.starIcon}
                          className={classNames(projectcss.all, sty.starIcon)}
                        >
                          <StarBackground2Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__tFdJd
                            )}
                            role={"img"}
                          />

                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__nHpfG)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: star16GwRKhOaLt0Jz,
                              fullWidth: 20,
                              fullHeight: 20,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                        <div
                          data-plasmic-name={"starIcon2"}
                          data-plasmic-override={overrides.starIcon2}
                          className={classNames(projectcss.all, sty.starIcon2)}
                        >
                          <StarBackground2Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__uvUfp
                            )}
                            role={"img"}
                          />

                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img___7BZn4)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: star17K7R5Klj8Dgrx,
                              fullWidth: 20,
                              fullHeight: 20,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                        <div
                          data-plasmic-name={"starIcon3"}
                          data-plasmic-override={overrides.starIcon3}
                          className={classNames(projectcss.all, sty.starIcon3)}
                        >
                          <StarBackground2Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__jgo3N
                            )}
                            role={"img"}
                          />

                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__fgN6I)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: star18DIxg5GmMeAf,
                              fullWidth: 20,
                              fullHeight: 20,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                        <div
                          data-plasmic-name={"starIcon4"}
                          data-plasmic-override={overrides.starIcon4}
                          className={classNames(projectcss.all, sty.starIcon4)}
                        >
                          <StarBackground2Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__sd194
                            )}
                            role={"img"}
                          />

                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__sGn4A)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: star19LnfQ7DdRIkT,
                              fullWidth: 20,
                              fullHeight: 20,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                        <div
                          data-plasmic-name={"starIcon5"}
                          data-plasmic-override={overrides.starIcon5}
                          className={classNames(projectcss.all, sty.starIcon5)}
                        >
                          <StarBackground2Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__hl5Y
                            )}
                            role={"img"}
                          />

                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__btsYw)}
                            displayHeight={"20px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"20px"}
                            loading={"lazy"}
                            src={{
                              src: star20P0LQIs1DIc,
                              fullWidth: 20,
                              fullHeight: 20,
                              aspectRatio: 1
                            }}
                          />
                        </div>
                      </Stack__>
                      <div
                        data-plasmic-name={"text"}
                        data-plasmic-override={overrides.text}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text
                        )}
                      >
                        {"5.0"}
                      </div>
                    </Stack__>
                    <div
                      data-plasmic-name={"text2"}
                      data-plasmic-override={overrides.text2}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text2
                      )}
                    >
                      {"from 16,256+ reviews"}
                    </div>
                  </Stack__>
                </Stack__>
              </div>
              <Vector8Icon
                className={classNames(projectcss.all, sty.svg__xFn9L)}
                role={"img"}
              />
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"formFieldContainer"}
              data-plasmic-override={overrides.formFieldContainer}
              hasGap={true}
              className={classNames(projectcss.all, sty.formFieldContainer)}
            >
              <div
                data-plasmic-name={"header"}
                data-plasmic-override={overrides.header}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.header
                )}
              >
                {"Enter Your Home Details for Price"}
              </div>
              <Stack__
                as={"div"}
                data-plasmic-name={"frame5993"}
                data-plasmic-override={overrides.frame5993}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame5993)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame5991"}
                  data-plasmic-override={overrides.frame5991}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame5991)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"input"}
                    data-plasmic-override={overrides.input}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.input)}
                  >
                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"leading"}
                        data-plasmic-override={overrides.leading}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.leading)}
                      >
                        {false ? (
                          <EnvelopeIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__leSxH
                            )}
                            role={"img"}
                          />
                        ) : null}
                        {false ? (
                          <div
                            data-plasmic-name={"avatar12"}
                            data-plasmic-override={overrides.avatar12}
                            className={classNames(projectcss.all, sty.avatar12)}
                          >
                            <div
                              data-plasmic-name={"group"}
                              data-plasmic-override={overrides.group}
                              className={classNames(projectcss.all, sty.group)}
                            >
                              <PlasmicImg__
                                alt={""}
                                className={classNames(sty.img__oz41D)}
                                displayHeight={"18px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"34.2px"}
                                loading={"lazy"}
                                src={{
                                  src: group3X83XUiYwVIlN,
                                  fullWidth: 34.2,
                                  fullHeight: 18,
                                  aspectRatio: 1.944444
                                }}
                              />

                              <VectorIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__nw5Ti
                                )}
                                role={"img"}
                              />

                              <Vector2Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__yMzD
                                )}
                                role={"img"}
                              />
                            </div>
                          </div>
                        ) : null}
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___2MTrw
                            )}
                          >
                            {"Eng"}
                          </div>
                        ) : null}
                        {false ? (
                          <ChevronDownIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__aeCe
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </Stack__>
                    ) : null}
                    {false ? (
                      <div
                        data-plasmic-name={"divider"}
                        data-plasmic-override={overrides.divider}
                        className={classNames(projectcss.all, sty.divider)}
                      />
                    ) : null}
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame6384"}
                      data-plasmic-override={overrides.frame6384}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame6384)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame5989"}
                        data-plasmic-override={overrides.frame5989}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame5989)}
                      >
                        <div
                          data-plasmic-name={"bed"}
                          data-plasmic-override={overrides.bed}
                          className={classNames(projectcss.all, sty.bed)}
                        >
                          <BedIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__rdiLh
                            )}
                            role={"img"}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___1I3Tk
                          )}
                        >
                          <Line1Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__xjZm3
                            )}
                            role={"img"}
                          />
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___9T8JB
                        )}
                      >
                        {"Bedroom"}
                      </div>
                    </Stack__>
                    <div
                      data-plasmic-name={"expandMore"}
                      data-plasmic-override={overrides.expandMore}
                      className={classNames(projectcss.all, sty.expandMore)}
                    >
                      <ExpandMoreIcon
                        className={classNames(projectcss.all, sty.svg__jlOxA)}
                        role={"img"}
                      />
                    </div>
                    {false ? (
                      <div
                        data-plasmic-name={"divider2"}
                        data-plasmic-override={overrides.divider2}
                        className={classNames(projectcss.all, sty.divider2)}
                      />
                    ) : null}
                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"trailing"}
                        data-plasmic-override={overrides.trailing}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.trailing)}
                      >
                        {false ? (
                          <div
                            data-plasmic-name={"avatar13"}
                            data-plasmic-override={overrides.avatar13}
                            className={classNames(projectcss.all, sty.avatar13)}
                          >
                            <div
                              data-plasmic-name={"group2"}
                              data-plasmic-override={overrides.group2}
                              className={classNames(projectcss.all, sty.group2)}
                            >
                              <PlasmicImg__
                                alt={""}
                                className={classNames(sty.img__twddG)}
                                displayHeight={"18px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"34.2px"}
                                loading={"lazy"}
                                src={{
                                  src: group3X83XUiYwVIlN,
                                  fullWidth: 34.2,
                                  fullHeight: 18,
                                  aspectRatio: 1.944444
                                }}
                              />

                              <VectorIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__oQyq
                                )}
                                role={"img"}
                              />

                              <Vector2Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__yPBl
                                )}
                                role={"img"}
                              />
                            </div>
                          </div>
                        ) : null}
                        {false ? (
                          <div
                            data-plasmic-name={"copy"}
                            data-plasmic-override={overrides.copy}
                            className={classNames(projectcss.all, sty.copy)}
                          >
                            <div
                              data-plasmic-name={"rectangle"}
                              data-plasmic-override={overrides.rectangle}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle
                              )}
                            />

                            <Vector3Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__x1UGi
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lhW4L
                            )}
                          >
                            {"Copy"}
                          </div>
                        ) : null}
                        {false ? (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__umd4O)}
                            displayHeight={"16px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"16px"}
                            loading={"lazy"}
                            src={{
                              src: questionCircle13IIf7Rc8LlGm,
                              fullWidth: 16,
                              fullHeight: 16,
                              aspectRatio: 1
                            }}
                          />
                        ) : null}
                      </Stack__>
                    ) : null}
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"input2"}
                    data-plasmic-override={overrides.input2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.input2)}
                  >
                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"leading2"}
                        data-plasmic-override={overrides.leading2}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.leading2)}
                      >
                        {false ? (
                          <EnvelopeIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__iuZrl
                            )}
                            role={"img"}
                          />
                        ) : null}
                        {false ? (
                          <div
                            data-plasmic-name={"avatar14"}
                            data-plasmic-override={overrides.avatar14}
                            className={classNames(projectcss.all, sty.avatar14)}
                          >
                            <div
                              data-plasmic-name={"group3"}
                              data-plasmic-override={overrides.group3}
                              className={classNames(projectcss.all, sty.group3)}
                            >
                              <PlasmicImg__
                                alt={""}
                                className={classNames(sty.img__qZ8F4)}
                                displayHeight={"18px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"34.2px"}
                                loading={"lazy"}
                                src={{
                                  src: group3X83XUiYwVIlN,
                                  fullWidth: 34.2,
                                  fullHeight: 18,
                                  aspectRatio: 1.944444
                                }}
                              />

                              <VectorIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__x6Qxd
                                )}
                                role={"img"}
                              />

                              <Vector2Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__lNQfA
                                )}
                                role={"img"}
                              />
                            </div>
                          </div>
                        ) : null}
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__dJwzl
                            )}
                          >
                            {"Eng"}
                          </div>
                        ) : null}
                        {false ? (
                          <ChevronDownIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___9HsuU
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </Stack__>
                    ) : null}
                    {false ? (
                      <div
                        data-plasmic-name={"divider3"}
                        data-plasmic-override={overrides.divider3}
                        className={classNames(projectcss.all, sty.divider3)}
                      />
                    ) : null}
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame6385"}
                      data-plasmic-override={overrides.frame6385}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame6385)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame5990"}
                        data-plasmic-override={overrides.frame5990}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame5990)}
                      >
                        <div
                          data-plasmic-name={"shower"}
                          data-plasmic-override={overrides.shower}
                          className={classNames(projectcss.all, sty.shower)}
                        >
                          <ShowerIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__tkJnb
                            )}
                            role={"img"}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__k5JHn
                          )}
                        >
                          <Line1Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__w0J7
                            )}
                            role={"img"}
                          />
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___6DaTb
                        )}
                      >
                        {"Bathroom"}
                      </div>
                    </Stack__>
                    <div
                      data-plasmic-name={"expandMore2"}
                      data-plasmic-override={overrides.expandMore2}
                      className={classNames(projectcss.all, sty.expandMore2)}
                    >
                      <ExpandMoreIcon
                        className={classNames(projectcss.all, sty.svg__bHl3)}
                        role={"img"}
                      />
                    </div>
                    {false ? (
                      <div
                        data-plasmic-name={"divider4"}
                        data-plasmic-override={overrides.divider4}
                        className={classNames(projectcss.all, sty.divider4)}
                      />
                    ) : null}
                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"trailing2"}
                        data-plasmic-override={overrides.trailing2}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.trailing2)}
                      >
                        {false ? (
                          <div
                            data-plasmic-name={"avatar15"}
                            data-plasmic-override={overrides.avatar15}
                            className={classNames(projectcss.all, sty.avatar15)}
                          >
                            <div
                              data-plasmic-name={"group4"}
                              data-plasmic-override={overrides.group4}
                              className={classNames(projectcss.all, sty.group4)}
                            >
                              <PlasmicImg__
                                alt={""}
                                className={classNames(sty.img__c0Ayz)}
                                displayHeight={"18px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"34.2px"}
                                loading={"lazy"}
                                src={{
                                  src: group3X83XUiYwVIlN,
                                  fullWidth: 34.2,
                                  fullHeight: 18,
                                  aspectRatio: 1.944444
                                }}
                              />

                              <VectorIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__kWlm
                                )}
                                role={"img"}
                              />

                              <Vector2Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__gitob
                                )}
                                role={"img"}
                              />
                            </div>
                          </div>
                        ) : null}
                        {false ? (
                          <div
                            data-plasmic-name={"copy2"}
                            data-plasmic-override={overrides.copy2}
                            className={classNames(projectcss.all, sty.copy2)}
                          >
                            <div
                              data-plasmic-name={"rectangle2"}
                              data-plasmic-override={overrides.rectangle2}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle2
                              )}
                            />

                            <Vector3Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__rq0Nx
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__noWnj
                            )}
                          >
                            {"Copy"}
                          </div>
                        ) : null}
                        {false ? (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__pCmSk)}
                            displayHeight={"16px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"16px"}
                            loading={"lazy"}
                            src={{
                              src: questionCircle14VvnoJjxrd3VS,
                              fullWidth: 16,
                              fullHeight: 16,
                              aspectRatio: 1
                            }}
                          />
                        ) : null}
                      </Stack__>
                    ) : null}
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"input3"}
                    data-plasmic-override={overrides.input3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.input3)}
                  >
                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"leading3"}
                        data-plasmic-override={overrides.leading3}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.leading3)}
                      >
                        {false ? (
                          <EnvelopeIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___0Xzm9
                            )}
                            role={"img"}
                          />
                        ) : null}
                        {false ? (
                          <div
                            data-plasmic-name={"avatar16"}
                            data-plasmic-override={overrides.avatar16}
                            className={classNames(projectcss.all, sty.avatar16)}
                          >
                            <div
                              data-plasmic-name={"group5"}
                              data-plasmic-override={overrides.group5}
                              className={classNames(projectcss.all, sty.group5)}
                            >
                              <PlasmicImg__
                                alt={""}
                                className={classNames(sty.img__dgg3Y)}
                                displayHeight={"18px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"34.2px"}
                                loading={"lazy"}
                                src={{
                                  src: group3X83XUiYwVIlN,
                                  fullWidth: 34.2,
                                  fullHeight: 18,
                                  aspectRatio: 1.944444
                                }}
                              />

                              <VectorIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__hDlG4
                                )}
                                role={"img"}
                              />

                              <Vector2Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___2OagL
                                )}
                                role={"img"}
                              />
                            </div>
                          </div>
                        ) : null}
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___9IUf6
                            )}
                          >
                            {"Eng"}
                          </div>
                        ) : null}
                        {false ? (
                          <ChevronDownIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___7ZAXv
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </Stack__>
                    ) : null}
                    {false ? (
                      <div
                        data-plasmic-name={"divider5"}
                        data-plasmic-override={overrides.divider5}
                        className={classNames(projectcss.all, sty.divider5)}
                      />
                    ) : null}
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame6386"}
                      data-plasmic-override={overrides.frame6386}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame6386)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame5992"}
                        data-plasmic-override={overrides.frame5992}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.frame5992)}
                      >
                        <div
                          data-plasmic-name={"cleaningServices"}
                          data-plasmic-override={overrides.cleaningServices}
                          className={classNames(
                            projectcss.all,
                            sty.cleaningServices
                          )}
                        >
                          <CleaningServicesIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__uWr2Z
                            )}
                            role={"img"}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__o3Swj
                          )}
                        >
                          <Line1Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__mwj2G
                            )}
                            role={"img"}
                          />
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wPy4
                        )}
                      >
                        {"Cleaning Type"}
                      </div>
                    </Stack__>
                    <div
                      data-plasmic-name={"expandMore3"}
                      data-plasmic-override={overrides.expandMore3}
                      className={classNames(projectcss.all, sty.expandMore3)}
                    >
                      <ExpandMoreIcon
                        className={classNames(projectcss.all, sty.svg__lusC)}
                        role={"img"}
                      />
                    </div>
                    {false ? (
                      <div
                        data-plasmic-name={"divider6"}
                        data-plasmic-override={overrides.divider6}
                        className={classNames(projectcss.all, sty.divider6)}
                      />
                    ) : null}
                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"trailing3"}
                        data-plasmic-override={overrides.trailing3}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.trailing3)}
                      >
                        {false ? (
                          <div
                            data-plasmic-name={"avatar17"}
                            data-plasmic-override={overrides.avatar17}
                            className={classNames(projectcss.all, sty.avatar17)}
                          >
                            <div
                              data-plasmic-name={"group6"}
                              data-plasmic-override={overrides.group6}
                              className={classNames(projectcss.all, sty.group6)}
                            >
                              <PlasmicImg__
                                alt={""}
                                className={classNames(sty.img__eScwm)}
                                displayHeight={"18px"}
                                displayMaxHeight={"none"}
                                displayMaxWidth={"100%"}
                                displayMinHeight={"0"}
                                displayMinWidth={"0"}
                                displayWidth={"34.2px"}
                                loading={"lazy"}
                                src={{
                                  src: group3X83XUiYwVIlN,
                                  fullWidth: 34.2,
                                  fullHeight: 18,
                                  aspectRatio: 1.944444
                                }}
                              />

                              <VectorIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__k2Wn
                                )}
                                role={"img"}
                              />

                              <Vector2Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___72ZKi
                                )}
                                role={"img"}
                              />
                            </div>
                          </div>
                        ) : null}
                        {false ? (
                          <div
                            data-plasmic-name={"copy3"}
                            data-plasmic-override={overrides.copy3}
                            className={classNames(projectcss.all, sty.copy3)}
                          >
                            <div
                              data-plasmic-name={"rectangle3"}
                              data-plasmic-override={overrides.rectangle3}
                              className={classNames(
                                projectcss.all,
                                sty.rectangle3
                              )}
                            />

                            <Vector3Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__u0VdK
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__iEBts
                            )}
                          >
                            {"Copy"}
                          </div>
                        ) : null}
                        {false ? (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__jjE0M)}
                            displayHeight={"16px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"16px"}
                            loading={"lazy"}
                            src={{
                              src: questionCircle15P782UT7XehJj,
                              fullWidth: 16,
                              fullHeight: 16,
                              aspectRatio: 1
                            }}
                          />
                        ) : null}
                      </Stack__>
                    ) : null}
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame6012"}
                  data-plasmic-override={overrides.frame6012}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame6012)}
                >
                  <div
                    data-plasmic-name={"bookingCta"}
                    data-plasmic-override={overrides.bookingCta}
                    className={classNames(projectcss.all, sty.bookingCta)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame6004"}
                      data-plasmic-override={overrides.frame6004}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame6004)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fKyf
                        )}
                      >
                        {"Get My Price"}
                      </div>
                      <div
                        data-plasmic-name={"arrowForward"}
                        data-plasmic-override={overrides.arrowForward}
                        className={classNames(projectcss.all, sty.arrowForward)}
                      >
                        <ArrowForwardIcon
                          className={classNames(projectcss.all, sty.svg__gyBj)}
                          role={"img"}
                        />
                      </div>
                    </Stack__>
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </Stack__>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "step21",
    "heroSection",
    "trending",
    "trending2",
    "navbar",
    "frame5995",
    "logo",
    "frame427322500",
    "arrowDropDown",
    "navMenu",
    "frame1000005439",
    "menu",
    "frame1000005438",
    "call",
    "actionBtns",
    "frame427322524",
    "deliverAnEnterpriseQuality",
    "frame427322523",
    "headerDetail",
    "frame427322522",
    "headerDetail2",
    "frame427322521",
    "headerDetail3",
    "userReviews",
    "avatarGroup",
    "avatars",
    "avatar",
    "contrastBorder",
    "avatar2",
    "contrastBorder2",
    "avatar3",
    "contrastBorder3",
    "avatar4",
    "contrastBorder4",
    "avatar5",
    "avatar6",
    "avatar7",
    "avatar8",
    "avatar9",
    "avatar10",
    "avatar11",
    "avatarAddButton",
    "content",
    "reviews",
    "row",
    "stars",
    "starIcon",
    "starIcon2",
    "starIcon3",
    "starIcon4",
    "starIcon5",
    "text",
    "text2",
    "formFieldContainer",
    "header",
    "frame5993",
    "frame5991",
    "input",
    "leading",
    "avatar12",
    "group",
    "divider",
    "frame6384",
    "frame5989",
    "bed",
    "expandMore",
    "divider2",
    "trailing",
    "avatar13",
    "group2",
    "copy",
    "rectangle",
    "input2",
    "leading2",
    "avatar14",
    "group3",
    "divider3",
    "frame6385",
    "frame5990",
    "shower",
    "expandMore2",
    "divider4",
    "trailing2",
    "avatar15",
    "group4",
    "copy2",
    "rectangle2",
    "input3",
    "leading3",
    "avatar16",
    "group5",
    "divider5",
    "frame6386",
    "frame5992",
    "cleaningServices",
    "expandMore3",
    "divider6",
    "trailing3",
    "avatar17",
    "group6",
    "copy3",
    "rectangle3",
    "frame6012",
    "bookingCta",
    "frame6004",
    "arrowForward"
  ],

  step21: [
    "step21",
    "heroSection",
    "trending",
    "trending2",
    "navbar",
    "frame5995",
    "logo",
    "frame427322500",
    "arrowDropDown",
    "navMenu",
    "frame1000005439",
    "menu",
    "frame1000005438",
    "call",
    "actionBtns",
    "frame427322524",
    "deliverAnEnterpriseQuality",
    "frame427322523",
    "headerDetail",
    "frame427322522",
    "headerDetail2",
    "frame427322521",
    "headerDetail3",
    "userReviews",
    "avatarGroup",
    "avatars",
    "avatar",
    "contrastBorder",
    "avatar2",
    "contrastBorder2",
    "avatar3",
    "contrastBorder3",
    "avatar4",
    "contrastBorder4",
    "avatar5",
    "avatar6",
    "avatar7",
    "avatar8",
    "avatar9",
    "avatar10",
    "avatar11",
    "avatarAddButton",
    "content",
    "reviews",
    "row",
    "stars",
    "starIcon",
    "starIcon2",
    "starIcon3",
    "starIcon4",
    "starIcon5",
    "text",
    "text2",
    "formFieldContainer",
    "header",
    "frame5993",
    "frame5991",
    "input",
    "leading",
    "avatar12",
    "group",
    "divider",
    "frame6384",
    "frame5989",
    "bed",
    "expandMore",
    "divider2",
    "trailing",
    "avatar13",
    "group2",
    "copy",
    "rectangle",
    "input2",
    "leading2",
    "avatar14",
    "group3",
    "divider3",
    "frame6385",
    "frame5990",
    "shower",
    "expandMore2",
    "divider4",
    "trailing2",
    "avatar15",
    "group4",
    "copy2",
    "rectangle2",
    "input3",
    "leading3",
    "avatar16",
    "group5",
    "divider5",
    "frame6386",
    "frame5992",
    "cleaningServices",
    "expandMore3",
    "divider6",
    "trailing3",
    "avatar17",
    "group6",
    "copy3",
    "rectangle3",
    "frame6012",
    "bookingCta",
    "frame6004",
    "arrowForward"
  ],

  heroSection: ["heroSection", "trending", "trending2"],
  trending: ["trending"],
  trending2: ["trending2"],
  navbar: [
    "navbar",
    "frame5995",
    "logo",
    "frame427322500",
    "arrowDropDown",
    "navMenu",
    "frame1000005439",
    "menu",
    "frame1000005438",
    "call",
    "actionBtns"
  ],

  frame5995: [
    "frame5995",
    "logo",
    "frame427322500",
    "arrowDropDown",
    "navMenu",
    "frame1000005439",
    "menu",
    "frame1000005438",
    "call",
    "actionBtns"
  ],

  logo: ["logo", "frame427322500", "arrowDropDown"],
  frame427322500: ["frame427322500", "arrowDropDown"],
  arrowDropDown: ["arrowDropDown"],
  navMenu: [
    "navMenu",
    "frame1000005439",
    "menu",
    "frame1000005438",
    "call",
    "actionBtns"
  ],

  frame1000005439: ["frame1000005439", "menu"],
  menu: ["menu"],
  frame1000005438: ["frame1000005438", "call", "actionBtns"],
  call: ["call"],
  actionBtns: ["actionBtns"],
  frame427322524: [
    "frame427322524",
    "deliverAnEnterpriseQuality",
    "frame427322523",
    "headerDetail",
    "frame427322522",
    "headerDetail2",
    "frame427322521",
    "headerDetail3",
    "userReviews",
    "avatarGroup",
    "avatars",
    "avatar",
    "contrastBorder",
    "avatar2",
    "contrastBorder2",
    "avatar3",
    "contrastBorder3",
    "avatar4",
    "contrastBorder4",
    "avatar5",
    "avatar6",
    "avatar7",
    "avatar8",
    "avatar9",
    "avatar10",
    "avatar11",
    "avatarAddButton",
    "content",
    "reviews",
    "row",
    "stars",
    "starIcon",
    "starIcon2",
    "starIcon3",
    "starIcon4",
    "starIcon5",
    "text",
    "text2"
  ],

  deliverAnEnterpriseQuality: ["deliverAnEnterpriseQuality"],
  frame427322523: [
    "frame427322523",
    "headerDetail",
    "frame427322522",
    "headerDetail2",
    "frame427322521",
    "headerDetail3",
    "userReviews",
    "avatarGroup",
    "avatars",
    "avatar",
    "contrastBorder",
    "avatar2",
    "contrastBorder2",
    "avatar3",
    "contrastBorder3",
    "avatar4",
    "contrastBorder4",
    "avatar5",
    "avatar6",
    "avatar7",
    "avatar8",
    "avatar9",
    "avatar10",
    "avatar11",
    "avatarAddButton",
    "content",
    "reviews",
    "row",
    "stars",
    "starIcon",
    "starIcon2",
    "starIcon3",
    "starIcon4",
    "starIcon5",
    "text",
    "text2"
  ],

  headerDetail: ["headerDetail"],
  frame427322522: [
    "frame427322522",
    "headerDetail2",
    "frame427322521",
    "headerDetail3"
  ],

  headerDetail2: ["headerDetail2"],
  frame427322521: ["frame427322521", "headerDetail3"],
  headerDetail3: ["headerDetail3"],
  userReviews: [
    "userReviews",
    "avatarGroup",
    "avatars",
    "avatar",
    "contrastBorder",
    "avatar2",
    "contrastBorder2",
    "avatar3",
    "contrastBorder3",
    "avatar4",
    "contrastBorder4",
    "avatar5",
    "avatar6",
    "avatar7",
    "avatar8",
    "avatar9",
    "avatar10",
    "avatar11",
    "avatarAddButton",
    "content",
    "reviews",
    "row",
    "stars",
    "starIcon",
    "starIcon2",
    "starIcon3",
    "starIcon4",
    "starIcon5",
    "text",
    "text2"
  ],

  avatarGroup: [
    "avatarGroup",
    "avatars",
    "avatar",
    "contrastBorder",
    "avatar2",
    "contrastBorder2",
    "avatar3",
    "contrastBorder3",
    "avatar4",
    "contrastBorder4",
    "avatar5",
    "avatar6",
    "avatar7",
    "avatar8",
    "avatar9",
    "avatar10",
    "avatar11",
    "avatarAddButton",
    "content"
  ],

  avatars: [
    "avatars",
    "avatar",
    "contrastBorder",
    "avatar2",
    "contrastBorder2",
    "avatar3",
    "contrastBorder3",
    "avatar4",
    "contrastBorder4",
    "avatar5",
    "avatar6",
    "avatar7",
    "avatar8",
    "avatar9",
    "avatar10",
    "avatar11"
  ],

  avatar: ["avatar", "contrastBorder"],
  contrastBorder: ["contrastBorder"],
  avatar2: ["avatar2", "contrastBorder2"],
  contrastBorder2: ["contrastBorder2"],
  avatar3: ["avatar3", "contrastBorder3"],
  contrastBorder3: ["contrastBorder3"],
  avatar4: ["avatar4", "contrastBorder4"],
  contrastBorder4: ["contrastBorder4"],
  avatar5: ["avatar5"],
  avatar6: ["avatar6"],
  avatar7: ["avatar7"],
  avatar8: ["avatar8"],
  avatar9: ["avatar9"],
  avatar10: ["avatar10"],
  avatar11: ["avatar11"],
  avatarAddButton: ["avatarAddButton", "content"],
  content: ["content"],
  reviews: [
    "reviews",
    "row",
    "stars",
    "starIcon",
    "starIcon2",
    "starIcon3",
    "starIcon4",
    "starIcon5",
    "text",
    "text2"
  ],

  row: [
    "row",
    "stars",
    "starIcon",
    "starIcon2",
    "starIcon3",
    "starIcon4",
    "starIcon5",
    "text"
  ],

  stars: [
    "stars",
    "starIcon",
    "starIcon2",
    "starIcon3",
    "starIcon4",
    "starIcon5"
  ],

  starIcon: ["starIcon"],
  starIcon2: ["starIcon2"],
  starIcon3: ["starIcon3"],
  starIcon4: ["starIcon4"],
  starIcon5: ["starIcon5"],
  text: ["text"],
  text2: ["text2"],
  formFieldContainer: [
    "formFieldContainer",
    "header",
    "frame5993",
    "frame5991",
    "input",
    "leading",
    "avatar12",
    "group",
    "divider",
    "frame6384",
    "frame5989",
    "bed",
    "expandMore",
    "divider2",
    "trailing",
    "avatar13",
    "group2",
    "copy",
    "rectangle",
    "input2",
    "leading2",
    "avatar14",
    "group3",
    "divider3",
    "frame6385",
    "frame5990",
    "shower",
    "expandMore2",
    "divider4",
    "trailing2",
    "avatar15",
    "group4",
    "copy2",
    "rectangle2",
    "input3",
    "leading3",
    "avatar16",
    "group5",
    "divider5",
    "frame6386",
    "frame5992",
    "cleaningServices",
    "expandMore3",
    "divider6",
    "trailing3",
    "avatar17",
    "group6",
    "copy3",
    "rectangle3",
    "frame6012",
    "bookingCta",
    "frame6004",
    "arrowForward"
  ],

  header: ["header"],
  frame5993: [
    "frame5993",
    "frame5991",
    "input",
    "leading",
    "avatar12",
    "group",
    "divider",
    "frame6384",
    "frame5989",
    "bed",
    "expandMore",
    "divider2",
    "trailing",
    "avatar13",
    "group2",
    "copy",
    "rectangle",
    "input2",
    "leading2",
    "avatar14",
    "group3",
    "divider3",
    "frame6385",
    "frame5990",
    "shower",
    "expandMore2",
    "divider4",
    "trailing2",
    "avatar15",
    "group4",
    "copy2",
    "rectangle2",
    "input3",
    "leading3",
    "avatar16",
    "group5",
    "divider5",
    "frame6386",
    "frame5992",
    "cleaningServices",
    "expandMore3",
    "divider6",
    "trailing3",
    "avatar17",
    "group6",
    "copy3",
    "rectangle3",
    "frame6012",
    "bookingCta",
    "frame6004",
    "arrowForward"
  ],

  frame5991: [
    "frame5991",
    "input",
    "leading",
    "avatar12",
    "group",
    "divider",
    "frame6384",
    "frame5989",
    "bed",
    "expandMore",
    "divider2",
    "trailing",
    "avatar13",
    "group2",
    "copy",
    "rectangle",
    "input2",
    "leading2",
    "avatar14",
    "group3",
    "divider3",
    "frame6385",
    "frame5990",
    "shower",
    "expandMore2",
    "divider4",
    "trailing2",
    "avatar15",
    "group4",
    "copy2",
    "rectangle2",
    "input3",
    "leading3",
    "avatar16",
    "group5",
    "divider5",
    "frame6386",
    "frame5992",
    "cleaningServices",
    "expandMore3",
    "divider6",
    "trailing3",
    "avatar17",
    "group6",
    "copy3",
    "rectangle3"
  ],

  input: [
    "input",
    "leading",
    "avatar12",
    "group",
    "divider",
    "frame6384",
    "frame5989",
    "bed",
    "expandMore",
    "divider2",
    "trailing",
    "avatar13",
    "group2",
    "copy",
    "rectangle"
  ],

  leading: ["leading", "avatar12", "group"],
  avatar12: ["avatar12", "group"],
  group: ["group"],
  divider: ["divider"],
  frame6384: ["frame6384", "frame5989", "bed"],
  frame5989: ["frame5989", "bed"],
  bed: ["bed"],
  expandMore: ["expandMore"],
  divider2: ["divider2"],
  trailing: ["trailing", "avatar13", "group2", "copy", "rectangle"],
  avatar13: ["avatar13", "group2"],
  group2: ["group2"],
  copy: ["copy", "rectangle"],
  rectangle: ["rectangle"],
  input2: [
    "input2",
    "leading2",
    "avatar14",
    "group3",
    "divider3",
    "frame6385",
    "frame5990",
    "shower",
    "expandMore2",
    "divider4",
    "trailing2",
    "avatar15",
    "group4",
    "copy2",
    "rectangle2"
  ],

  leading2: ["leading2", "avatar14", "group3"],
  avatar14: ["avatar14", "group3"],
  group3: ["group3"],
  divider3: ["divider3"],
  frame6385: ["frame6385", "frame5990", "shower"],
  frame5990: ["frame5990", "shower"],
  shower: ["shower"],
  expandMore2: ["expandMore2"],
  divider4: ["divider4"],
  trailing2: ["trailing2", "avatar15", "group4", "copy2", "rectangle2"],
  avatar15: ["avatar15", "group4"],
  group4: ["group4"],
  copy2: ["copy2", "rectangle2"],
  rectangle2: ["rectangle2"],
  input3: [
    "input3",
    "leading3",
    "avatar16",
    "group5",
    "divider5",
    "frame6386",
    "frame5992",
    "cleaningServices",
    "expandMore3",
    "divider6",
    "trailing3",
    "avatar17",
    "group6",
    "copy3",
    "rectangle3"
  ],

  leading3: ["leading3", "avatar16", "group5"],
  avatar16: ["avatar16", "group5"],
  group5: ["group5"],
  divider5: ["divider5"],
  frame6386: ["frame6386", "frame5992", "cleaningServices"],
  frame5992: ["frame5992", "cleaningServices"],
  cleaningServices: ["cleaningServices"],
  expandMore3: ["expandMore3"],
  divider6: ["divider6"],
  trailing3: ["trailing3", "avatar17", "group6", "copy3", "rectangle3"],
  avatar17: ["avatar17", "group6"],
  group6: ["group6"],
  copy3: ["copy3", "rectangle3"],
  rectangle3: ["rectangle3"],
  frame6012: ["frame6012", "bookingCta", "frame6004", "arrowForward"],
  bookingCta: ["bookingCta", "frame6004", "arrowForward"],
  frame6004: ["frame6004", "arrowForward"],
  arrowForward: ["arrowForward"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHeroSection__ArgProps,
          internalVariantPropNames: PlasmicHeroSection__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHeroSection__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHeroSection";
  } else {
    func.displayName = `PlasmicHeroSection.${nodeName}`;
  }
  return func;
}

export const PlasmicHeroSection = Object.assign(
  // Top-level PlasmicHeroSection renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    step21: makeNodeComponent("step21"),
    heroSection: makeNodeComponent("heroSection"),
    trending: makeNodeComponent("trending"),
    trending2: makeNodeComponent("trending2"),
    navbar: makeNodeComponent("navbar"),
    frame5995: makeNodeComponent("frame5995"),
    logo: makeNodeComponent("logo"),
    frame427322500: makeNodeComponent("frame427322500"),
    arrowDropDown: makeNodeComponent("arrowDropDown"),
    navMenu: makeNodeComponent("navMenu"),
    frame1000005439: makeNodeComponent("frame1000005439"),
    menu: makeNodeComponent("menu"),
    frame1000005438: makeNodeComponent("frame1000005438"),
    call: makeNodeComponent("call"),
    actionBtns: makeNodeComponent("actionBtns"),
    frame427322524: makeNodeComponent("frame427322524"),
    deliverAnEnterpriseQuality: makeNodeComponent("deliverAnEnterpriseQuality"),
    frame427322523: makeNodeComponent("frame427322523"),
    headerDetail: makeNodeComponent("headerDetail"),
    frame427322522: makeNodeComponent("frame427322522"),
    headerDetail2: makeNodeComponent("headerDetail2"),
    frame427322521: makeNodeComponent("frame427322521"),
    headerDetail3: makeNodeComponent("headerDetail3"),
    userReviews: makeNodeComponent("userReviews"),
    avatarGroup: makeNodeComponent("avatarGroup"),
    avatars: makeNodeComponent("avatars"),
    avatar: makeNodeComponent("avatar"),
    contrastBorder: makeNodeComponent("contrastBorder"),
    avatar2: makeNodeComponent("avatar2"),
    contrastBorder2: makeNodeComponent("contrastBorder2"),
    avatar3: makeNodeComponent("avatar3"),
    contrastBorder3: makeNodeComponent("contrastBorder3"),
    avatar4: makeNodeComponent("avatar4"),
    contrastBorder4: makeNodeComponent("contrastBorder4"),
    avatar5: makeNodeComponent("avatar5"),
    avatar6: makeNodeComponent("avatar6"),
    avatar7: makeNodeComponent("avatar7"),
    avatar8: makeNodeComponent("avatar8"),
    avatar9: makeNodeComponent("avatar9"),
    avatar10: makeNodeComponent("avatar10"),
    avatar11: makeNodeComponent("avatar11"),
    avatarAddButton: makeNodeComponent("avatarAddButton"),
    content: makeNodeComponent("content"),
    reviews: makeNodeComponent("reviews"),
    row: makeNodeComponent("row"),
    stars: makeNodeComponent("stars"),
    starIcon: makeNodeComponent("starIcon"),
    starIcon2: makeNodeComponent("starIcon2"),
    starIcon3: makeNodeComponent("starIcon3"),
    starIcon4: makeNodeComponent("starIcon4"),
    starIcon5: makeNodeComponent("starIcon5"),
    text: makeNodeComponent("text"),
    text2: makeNodeComponent("text2"),
    formFieldContainer: makeNodeComponent("formFieldContainer"),
    header: makeNodeComponent("header"),
    frame5993: makeNodeComponent("frame5993"),
    frame5991: makeNodeComponent("frame5991"),
    input: makeNodeComponent("input"),
    leading: makeNodeComponent("leading"),
    avatar12: makeNodeComponent("avatar12"),
    group: makeNodeComponent("group"),
    divider: makeNodeComponent("divider"),
    frame6384: makeNodeComponent("frame6384"),
    frame5989: makeNodeComponent("frame5989"),
    bed: makeNodeComponent("bed"),
    expandMore: makeNodeComponent("expandMore"),
    divider2: makeNodeComponent("divider2"),
    trailing: makeNodeComponent("trailing"),
    avatar13: makeNodeComponent("avatar13"),
    group2: makeNodeComponent("group2"),
    copy: makeNodeComponent("copy"),
    rectangle: makeNodeComponent("rectangle"),
    input2: makeNodeComponent("input2"),
    leading2: makeNodeComponent("leading2"),
    avatar14: makeNodeComponent("avatar14"),
    group3: makeNodeComponent("group3"),
    divider3: makeNodeComponent("divider3"),
    frame6385: makeNodeComponent("frame6385"),
    frame5990: makeNodeComponent("frame5990"),
    shower: makeNodeComponent("shower"),
    expandMore2: makeNodeComponent("expandMore2"),
    divider4: makeNodeComponent("divider4"),
    trailing2: makeNodeComponent("trailing2"),
    avatar15: makeNodeComponent("avatar15"),
    group4: makeNodeComponent("group4"),
    copy2: makeNodeComponent("copy2"),
    rectangle2: makeNodeComponent("rectangle2"),
    input3: makeNodeComponent("input3"),
    leading3: makeNodeComponent("leading3"),
    avatar16: makeNodeComponent("avatar16"),
    group5: makeNodeComponent("group5"),
    divider5: makeNodeComponent("divider5"),
    frame6386: makeNodeComponent("frame6386"),
    frame5992: makeNodeComponent("frame5992"),
    cleaningServices: makeNodeComponent("cleaningServices"),
    expandMore3: makeNodeComponent("expandMore3"),
    divider6: makeNodeComponent("divider6"),
    trailing3: makeNodeComponent("trailing3"),
    avatar17: makeNodeComponent("avatar17"),
    group6: makeNodeComponent("group6"),
    copy3: makeNodeComponent("copy3"),
    rectangle3: makeNodeComponent("rectangle3"),
    frame6012: makeNodeComponent("frame6012"),
    bookingCta: makeNodeComponent("bookingCta"),
    frame6004: makeNodeComponent("frame6004"),
    arrowForward: makeNodeComponent("arrowForward"),
    // Metadata about props expected for PlasmicHeroSection
    internalVariantProps: PlasmicHeroSection__VariantProps,
    internalArgProps: PlasmicHeroSection__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHeroSection;
/* prettier-ignore-end */
